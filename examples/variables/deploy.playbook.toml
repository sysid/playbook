# Simple deployment workflow with variables
[variables]
APP_NAME = { default = "myapp", description = "Application name" }
ENVIRONMENT = { required = true, choices = ["dev", "staging", "prod"], description = "Target environment" }
VERSION = { default = "latest", description = "Version to deploy" }
TIMEOUT = { default = 300, type = "int", description = "Command timeout in seconds" }

[runbook]
title = "Deploy {{APP_NAME}}"
description = "Deploy {{APP_NAME}} version {{VERSION}} to {{ENVIRONMENT}}"
version = "1.0.0"
author = "devops"
created_at = "2025-01-20T12:00:00Z"

[pre_deploy_check]
type = "Manual"
prompt_after = "Ready to deploy {{APP_NAME}} {{VERSION}} to {{ENVIRONMENT}}? This will affect the {{ENVIRONMENT}} environment."
description = "Pre-deployment confirmation"
depends_on = []

[deploy_application]
type = "Command"
command_name = "docker run --rm -v $(pwd):/workspace deploy-tool:latest deploy --app={{APP_NAME}} --version={{VERSION}} --env={{ENVIRONMENT}} --timeout={{TIMEOUT}}"
description = "Deploy {{APP_NAME}} to {{ENVIRONMENT}}"
timeout = "{{TIMEOUT}}"
depends_on = ["pre_deploy_check"]

[health_check]
type = "Command"
command_name = "curl -f https://{{APP_NAME}}-{{ENVIRONMENT}}.company.com/health || exit 1"
description = "Verify {{APP_NAME}} is healthy in {{ENVIRONMENT}}"
timeout = 60
depends_on = ["deploy_application"]

[post_deploy_notification]
type = "Function"
function_name = "send_slack_notification"
description = "Send deployment notification"
depends_on = ["health_check"]

[post_deploy_notification.function_params]
channel = "{% if ENVIRONMENT == 'prod' %}#deployments{% else %}#dev-deployments{% endif %}"
message = "âœ… Successfully deployed {{APP_NAME}} {{VERSION}} to {{ENVIRONMENT}}"
app = "{{APP_NAME}}"
version = "{{VERSION}}"
environment = "{{ENVIRONMENT}}"